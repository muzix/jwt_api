user root;

events {
    worker_connections 1024;
}

rtmp {
server {
    listen 1935;

    application live {
        live on;
        exec_push ffmpeg -i rtmp://localhost/live/$name
            -c:v copy -c:a copy -f flv rtmp://localhost/dup/$name;
        #exec_push ffmpeg -i rtmp://localhost/live/$name
        #    -c:v libx264 -preset:v ultrafast -force_key_frames "expr:gte(t,n_forced*0.6)" -s 854x480 -b:v 200K -c:a copy -f flv rtmp://localhost/hls/$name_low;
        #exec ffmpeg -i rtmp://localhost/live/$name -c:v libx264 -preset:v ultrafast -force_key_frames "expr:gte(t,n_forced*0.6)" -s 854x480 -b:v 200K -c:a copy -f ssegment -segment_list /root/tmp/$name_low.m3u8 -segment_list_type hls -segment_list_size 10 -segment_list_flags +live -segment_time 0.6 -segment_wrap 10 /root/tmp/$name_low%01d.ts;

        exec bash -c "/root/core_low.sh $name";
        exec bash -c "/root/core_hi.sh $name";
        exec bash -c "/root/core_master.sh $name > /root/tmp/$name.m3u8";

            #-c:v libx264 -preset:v ultrafast -force_key_frames "expr:gte(t,n_forced*6)" -s 640x360 -b:v 700K -c:a copy -tune zerolatency -f flv rtmp://localhost/hls/$name_slow;

            # -c:v libx264 -s 852x480 -b:v 128K -c:a copy -tune zerolatency -f flv rtmp://localhost/hls/$name_low;
            # -c:v libx264 -s 1280x720 -b:v 256k -c:a copy -tune zerolatency -f flv rtmp://localhost/hls/$name_mid;
       # recorder preview {
       #         record all;
       #         record_max_size 8024K;
       #         record_path /root/preview;
       #         record_interval 10m;
       #         exec_record_done ffmpeg -i $path -vcodec png -vframes 1 -an -f rawvideo -s 320x240 -ss 00:00:01 -y /root/preview/$name.png;
       #         exec_record_done ffmpeg -i $path -c:v libx264 -s 320x240 -b:v 30K -c:a copy -tune zerolatency -f mp4 /root/preview/$name.mp4;
       #  }
    }

    application dup {
         live on;
    }

    application hls {
        live on;
        hls on;
        hls_path /root/data;

        # hls_fragment 1s;
        # hls_playlist_length 4s;
        hls_fragment 600ms;
        hls_playlist_length 6s;
        hls_nested on;
        #hls_variant _low BANDWIDTH=288000; # Low bitrate, sub-SD resolution
        hls_variant _low BANDWIDTH=448000; # Medium bitrate, SD resolution
        #hls_variant _low BANDWIDTH=1152000; # High bitrate, higher-than-SD resolution
        hls_variant _hi BANDWIDTH=2048000; # High bitrate, HD 720p resolution
        #hls_variant _src BANDWIDTH=4096000; # Source bitrate, source resolution
   
        hls_fragment_naming system;

    }
}
}

http {
    sendfile off;
    tcp_nopush on;
    aio on;
    directio 512;
    default_type application/octet-stream;

    server {
        listen 80;

        location / {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /root/tmp;
        }
      location /preview {
            mp4;
            mp4_buffer_size       1m;
            mp4_max_buffer_size   5m;
            root /root;
       }

    }
}
